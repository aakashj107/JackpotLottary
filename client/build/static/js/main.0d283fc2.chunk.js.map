{"version":3,"sources":["app/state/authSlice.js","app/containers/SignoutButton/index.js","app/containers/PrivateRoute/index.js","app/containers/Navbar/index.js","app/components/Footer/index.js","app/components/Loading/Main/index.js","app/components/Loading/index.js","App.js","app/state/store.js","index.js"],"names":["authSlice","createSlice","name","initialState","isAuthenticated","user","expires","reducers","signin","state","action","payload","signout","actions","Signout","dispatch","useDispatch","onClickSignout","e","a","preventDefault","axios","delete","status","console","error","onClick","PrivateRoute","Component","component","rest","auth","useSelector","render","props","to","pathname","from","location","Navbar","Fragment","className","exact","activeClassName","SignoutButton","Footer","Main","Loading","Signin","React","lazy","Signup","Landing","Dashboard","Private","App","expired","Date","now","useEffect","fallback","path","combineReducers","authReducer","persistConfig","key","whitelist","storage","persistedReducer","persistReducer","store","configureStore","reducer","devTools","middleware","thunk","persistor","persistStore","NODE_MOUNT","document","getElementById","ReactDOM","StrictMode","loading"],"mappings":"iGAAA,gFAEaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,iBAAiB,EACjBC,KAAM,GACNC,QAAS,MAEXC,SAAU,CACRC,OAAQ,SAACC,EAAOC,GACdD,EAAML,iBAAkB,EACxBK,EAAMJ,KAAOK,EAAOC,QAAQN,KAC5BI,EAAMH,QAAUI,EAAOC,QAAQL,SAEjCM,QAAS,SAACH,GACRA,EAAML,iBAAkB,EACxBK,EAAMJ,KAAO,GACbI,EAAMH,QAAU,S,EAKaN,EAAUa,QAA9BL,E,EAAAA,OAAQI,E,EAAAA,QAERZ,MAAf,S,4GCEec,IAtBC,WACZ,IAAMC,EAAWC,cAEXC,EAAc,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEAEfD,EAAEE,iBAFa,SAIGC,IAAMC,OAAO,eAJhB,OAMI,MANJ,OAMPC,QACNR,EAASH,eAPI,gDAUfY,QAAQC,MAAR,MAVe,yDAAH,sDAapB,OACI,wBAAQC,QAAST,EAAjB,wB,kPCAOU,EAlBM,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACpDC,EAAOC,aAAY,SAACvB,GAAD,OAAWA,EAAMsB,QAC1C,OACE,cAAC,IAAD,2BACMD,GADN,IAEEG,OAAQ,SAACC,GAAD,OACNH,EAAK3B,gBACH,cAACwB,EAAD,eAAeM,IAEf,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAU,UAAW3B,MAAO,CAAE4B,KAAMH,EAAMI,kB,gBC6B7CC,EApCA,WACb,IAAMR,EAAOC,aAAY,SAACvB,GAAD,OAAWA,EAAMsB,QAC1C,OACE,eAAC,IAAMS,SAAP,WACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASR,GAAG,IAA3C,kBAGA,cAAC,IAAD,CAASO,OAAK,EAACC,gBAAgB,SAASR,GAAG,aAA3C,uBAGA,cAAC,IAAD,CAASO,OAAK,EAACC,gBAAgB,SAASR,GAAG,WAA3C,kCAGCJ,EAAK3B,gBACJ,cAAC,IAAMoC,SAAP,UACE,cAACI,EAAA,EAAD,MAGF,eAAC,IAAMJ,SAAP,WACE,cAAC,IAAD,CAASE,OAAK,EAACC,gBAAgB,SAASR,GAAG,UAA3C,qBAGA,cAAC,IAAD,CAASO,OAAK,EAACC,gBAAgB,SAASR,GAAG,UAA3C,6BAOR,qBAAKM,UAAU,sBC3BNI,G,MARA,WACX,OACI,qBAAKJ,UAAU,SAAf,2CCiBOK,G,YAnBF,kBACT,qBAAKL,UAAU,wCAAf,SACI,sBAAKA,UAAU,kBAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,+BCJKM,EARC,WACd,OACE,qBAAKN,UAAU,UAAf,SACE,cAAC,EAAD,OCEAO,EAASC,IAAMC,MAAK,kBAAM,gCAC1BC,EAASF,IAAMC,MAAK,kBAAM,gCAC1BE,EAAUH,IAAMC,MAAK,kBAAM,gCAC3BG,EAAYJ,IAAMC,MAAK,kBAAM,gCAC7BI,EAAUL,IAAMC,MAAK,kBAAM,gCAmClBK,EAjCH,SAACrB,GAEX,IAAMnB,EAAWC,cACXe,EAAOC,aAAY,SAACvB,GAAD,OAAWA,EAAMsB,QACpCyB,EAAU,IAAIC,KAAKA,KAAKC,QAAU,IAAID,KAAK1B,EAAKzB,SAUtD,OATAqD,qBAAU,WAEFH,GACFzC,EAASH,iBAIZ,CAACG,EAAUyC,IAGZ,cAAC,IAAMhB,SAAP,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACE,cAAC,WAAD,CAAUoB,SAAU,cAAC,EAAD,IAApB,SACI,eAAC,IAAD,WACE,cAAC,IAAD,yBAAOlB,OAAK,EAACmB,KAAK,KAAQ3B,GAA1B,IAAiCL,UAAWuB,KAC5C,cAAC,IAAD,yBAAOV,OAAK,EAACmB,KAAK,WAAc3B,GAAhC,IAAuCL,UAAWmB,KAClD,cAAC,IAAD,yBAAON,OAAK,EAACmB,KAAK,WAAc3B,GAAhC,IAAuCL,UAAWsB,KAClD,cAAC,EAAD,yBAAcT,OAAK,EAACmB,KAAK,cAAiB3B,GAA1C,IAAiDL,UAAWwB,KAC5D,cAAC,EAAD,yBAAcX,OAAK,EAACmB,KAAK,YAAe3B,GAAxC,IAA+CL,UAAWyB,UAGlE,cAAC,EAAD,U,wDCnCF/C,EAAWuD,YAAgB,CAC/B/B,KAAMgC,MAGDC,EAAgB,CAClBC,IAAK,OACLC,UAAW,CAAC,QACZC,aAGEC,EAAmBC,YAAeL,EAAezD,GAEjD+D,EAAQC,YAAe,CAC5BC,QAASJ,EACTK,UAAU,EACVC,WAAY,CAACC,OAGTC,EAAYC,YAAaP,GClBzBQ,EAAaC,SAASC,eAAe,QAE3CC,IAAShD,OACP,cAAC,IAAMiD,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaa,QAAS,KAAMP,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINE,K","file":"static/js/main.0d283fc2.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isAuthenticated: false,\n    user: {},\n    expires: null,\n  },\n  reducers: {\n    signin: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.expires = action.payload.expires;\n    },\n    signout: (state) => {\n      state.isAuthenticated = false;\n      state.user = {};\n      state.expires = null;\n    },\n  },\n});\n\nexport const { signin, signout } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { signout } from \"../../state/authSlice\";\n\nconst Signout = () => {\n    const dispatch = useDispatch();\n\n    const onClickSignout = async (e) => {\n        try {\n            e.preventDefault();\n      \n            const res = await axios.delete(\"/auth/local\");\n      \n            if (res.status === 200) {\n              dispatch(signout());\n            }\n          } catch (error) {\n            console.error(error);\n          }\n    }\n    return(\n        <button onClick={onClickSignout}>Sign Out</button>\n    )\n\n}\n\nexport default Signout;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const auth = useSelector((state) => state.auth);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/signin\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"./index.scss\";\n\nimport SignoutButton from \"../SignoutButton\";\n\nconst Navbar = () => {\n  const auth = useSelector((state) => state.auth);\n  return (\n    <React.Fragment>\n      <div className=\"Navbar\">\n        <div className=\"inner\">\n          <NavLink exact activeClassName=\"active\" to=\"/\">\n            Home\n          </NavLink>\n          <NavLink exact activeClassName=\"active\" to=\"/dashboard\">\n            Dashboard\n          </NavLink>\n          <NavLink exact activeClassName=\"active\" to=\"/another\">\n            Another Private Page\n          </NavLink>\n          {auth.isAuthenticated ? (\n            <React.Fragment>\n              <SignoutButton />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <NavLink exact activeClassName=\"active\" to=\"/signin\">\n                Sign In\n              </NavLink>\n              <NavLink exact activeClassName=\"active\" to=\"/signup\">\n                Sign Up\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      <div className=\"Navbar-Offset\"></div>\n    </React.Fragment>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n            This is a Footer component.\n        </div>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./index.scss\";\n\nconst Main = () => (\n    <div className=\"loadingio-spinner-spinner-vpufwojq17o\">\n        <div className=\"ldio-mkp0q1l4nc\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n)\n\nexport default Main;","import React from \"react\";\nimport \"./index.scss\";\n\nimport Main from \"./Main\";\n\nconst Loading = () => {\n  return (\n    <div className=\"Loading\">\n      <Main />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect, Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signout } from \"./app/state/authSlice\";\r\n\r\nimport PrivateRoute from \"./app/containers/PrivateRoute\";\r\nimport Navbar from \"./app/containers/Navbar\";\r\nimport Footer from \"./app/components/Footer\";\r\nimport Loading from \"./app/components/Loading\";\r\n\r\nconst Signin = React.lazy(() => import(\"./app/routes/Signin\"));\r\nconst Signup = React.lazy(() => import(\"./app/routes/Signup\"));\r\nconst Landing = React.lazy(() => import(\"./app/routes/Landing\"));\r\nconst Dashboard = React.lazy(() => import(\"./app/routes/Dashboard\"));\r\nconst Private = React.lazy(() => import(\"./app/routes/Private\"));\r\n\r\nconst App = (props) => {\r\n  //Check and update authentication status\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const expired = new Date(Date.now()) >= new Date(auth.expires);\r\n  useEffect(() => {\r\n    const main = () => {\r\n      if (expired) {\r\n        dispatch(signout());\r\n      }\r\n    };\r\n    main();\r\n  }, [dispatch, expired]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Navbar />\r\n          <Suspense fallback={<Loading />}>\r\n              <Switch>\r\n                <Route exact path=\"/\" {...props} component={Landing} />\r\n                <Route exact path=\"/signin\" {...props} component={Signin} />\r\n                <Route exact path=\"/signup\" {...props} component={Signup} />\r\n                <PrivateRoute exact path=\"/dashboard\" {...props} component={Dashboard} />\r\n                <PrivateRoute exact path=\"/another\" {...props} component={Private} />\r\n              </Switch>\r\n          </Suspense>\r\n        <Footer />\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {combineReducers} from \"redux\"; \nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\"\n\nimport authReducer from \"./authSlice\";\n\nconst reducers = combineReducers({\n  auth: authReducer     \n });\n \n const persistConfig = {\n     key: \"root\",\n     whitelist: [\"auth\"],\n     storage\n };\n \n const persistedReducer = persistReducer(persistConfig, reducers);\n\n const store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: [thunk]\n});\n\nconst persistor = persistStore(store);\n\nexport {\n  store,\n  persistor\n};\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport {store, persistor} from \"./app/state/store\";\r\n\r\nconst NODE_MOUNT = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  NODE_MOUNT\r\n);\r\n"],"sourceRoot":""}